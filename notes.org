* Misc notes
  - Raytracing & intersection formulas: Not a lot of shapes behave this
    way, and not a lot of transformations behave this way.  Meshes and
    voxels (and possibly NURBS and other splines) are a sort of
    exception, but in some sense, the "least" functional one since they
    are basically flat data, not something procedural.
  - What examples can I find for showing how shaders are flexible for
    3D scenes (not 2D)... without actually having to write detailed
    examples?
  - Surface opacity/translucency from shaders!
  - Perhaps explain (if time) volume rendering via raymarching as a
    case related to distance fields?
  - It is possible to represent infinite models and scenes with
    distance fields
    - Simple cases (infinite tiling/mirroring), more complex (IFS),
      ridiculously complex (the entire Mandelbulb fractal).
    - Compare this with something like lazy sequences
  - GigaVoxels is sort of procedural too
* Main focuses for remaining work
  - Fix up sphere tracing explanation.
  - Lots of picture examples!
  - Lots of code examples!
* TODO Don't make sphere tracing the focus.  It's incidental.
  - F-Reps or implicit surfaces are the "functional" representation to
    start on here.  SDFs/bounds are the more constrained form of them
    that sphere tracing can work with.  The focus should be on the
    "functional" source here, not on the algorithm itself.
* TODO Read 'Book of Shaders'
  - This is an excellent introduction that uses GLSL
* TODO Heightmap example?
  - It's a good way to show noise, maybe.
* TODO Hardware for presentation
  - [ ] Is my laptop fast enough?  What adapters might I need?
  - [ ] Figure out what causes my laptop's glslViewer issues
    - It was fine after a fresh reset. Suspending?  Switching screens?
  - [ ] Does glslViewer run on my NVidia Jetson?
  - [ ] Could I do this on a Pi?
    - Fast enough?  (Try it)
    - Probably can't run libfive very well
    - Can I show the GLSL framebuffer and code at the same time?
    - Can I show slides?  (Need GUI probably)
      - Couldn't do speaker notes most likely
* TODO Demoscene & pouet?
* TODO Explain isosurfaces starting from 2D examples
* TODO Show some implicit surfaces I did in POV-Ray?
* TODO Note that 2D approach is an image creation method on its own 
  - Link to Functional Images or whatever
  - Show some of my examples?
* TODO If time: Give some folded IFS-derived fractals.
  - However, [[http://blog.hvidtfeldts.net/index.php/2011/08/distance-estimated-3d-fractals-iii-folding-space/][Distance Estimated 3D Fractals (III): Folding Space]] gives
    some fractals (IFS-like rather than escape-time) that look much more
    feasible, and use things like absolute value to fold space, paired
    with rotations.
  - Explaining Mandelbulb formulas in detail is out of scope.  Perhaps
    show Mandelbulb but that's it.
* TODO Find workable sphere tracer (or use what I had)
* TODO Code: Show compositions of textures/shaders (e.g. Perlin noise)
  - Note that glslViewer allows animation & interaction here, and easy
    2D, and all of Book of Shaders uses it
* TODO Code: domain transformations in libfive
* TODO Code: GLSL sphere tracer & Perlin noise perturbation
* TODO Code (maybe): Isosurfaces in POV-Ray
* TODO Code (maybe): Shaders in POV-Ray
